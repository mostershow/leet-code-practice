package medium;import java.util.Collections;import java.util.Comparator;import java.util.List;public class _524_通过删除字母匹配到字典里最长单词 {    // java双指针 边找答案边排序    public String findLongestWord(String s, List<String> dictionary) {        String res = "";        for (String t : dictionary) {            int i = 0, j = 0;            while (i < s.length() && j < t.length()) {                if (s.charAt(i)==t.charAt(j)){                    j++;                }                i++;                if(j == t.length()){                    // 在符合条件的结果中比较、冒泡                    if(t.length() > res.length() || (t.length() == res.length() && t.compareTo(res) < 0)){                        res = t;                    }                }            }        }        return res;    }    // 先排序再找答案    public String findLongestWord2(String s, List<String> dictionary) {        Collections.sort(dictionary, new Comparator<String>() {            public int compare(String word1, String word2) {                if (word1.length() != word2.length()) {                    return word2.length() - word1.length();                } else {                    return word1.compareTo(word2);                }            }        });        for (String t : dictionary) {            int i = 0, j = 0;            while (i < t.length() && j < s.length()) {                if (t.charAt(i) == s.charAt(j)) {                    ++i;                }                ++j;            }            if (i == t.length()) {                return t;            }        }        return "";    }}